!function(e,t,s){"use strict";var r={render:()=>e.createVNode(e.resolveComponent("router-view"),null,null)},a={props:["content"],render:({content:t})=>e.createVNode("button",{type:"submit"},[t,e.createVNode("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 50.96 37"},[e.createVNode("path",{d:"M50.96 18.5L32.45 37h-9.9l14.99-15H0v-7h37.54L22.55 0h9.9l18.51 18.5z"},null)])])},o={data:()=>({err:null,username:"",password:""}),render(){return e.createVNode("div",{class:"container"},[e.createVNode("form",{onSubmit:e=>{e.preventDefault(),this.login()}},[e.withDirectives(e.createVNode("input",{"onUpdate:modelValue":e=>this.username=e,type:"text",placeholder:"Identifiant / Email",autocomplete:"username",maxlength:"32"},null),[[e.vModelText,this.username]]),e.withDirectives(e.createVNode("input",{"onUpdate:modelValue":e=>this.password=e,type:"password",placeholder:"Mot de passe",autocomplete:"current-password"},null),[[e.vModelText,this.password]]),this.err&&e.createVNode("p",{class:"error"},[this.err]),e.createVNode(a,{content:"Se connecter"},null)]),e.createVNode(e.resolveComponent("router-link"),{to:"/register"},{default:()=>[e.createTextVNode("Se créer un compte")]})])},methods:{getErrorFromHttpStatus:e=>401===e?"Identifiants invalides":"Il y'a eu un problème. Veuillez réessayer plus tard",login(){const{username:e,password:t}=this;if(!(e&&t))return this.err="Veuillez remplir tous les champs";s.post("/api/v1/login",{username:e,password:t}).then((()=>this.$router.push("app"))).catch((e=>this.err=this.getErrorFromHttpStatus(e.response.status)))}}},i={data:()=>({isLoggedIn:!1,err:null,email:"",username:"",password:""}),render(){return e.createVNode("div",{class:"container"},[e.createVNode("form",{onSubmit:e=>{e.preventDefault(),this.register()}},[e.withDirectives(e.createVNode("input",{"onUpdate:modelValue":e=>this.email=e,type:"text",placeholder:"Adresse email"},null),[[e.vModelText,this.email]]),e.withDirectives(e.createVNode("input",{"onUpdate:modelValue":e=>this.username=e,type:"text",placeholder:"Identifiant"},null),[[e.vModelText,this.username]]),e.withDirectives(e.createVNode("input",{"onUpdate:modelValue":e=>this.password=e,type:"password",placeholder:"Mot de passe"},null),[[e.vModelText,this.password]]),this.err&&e.createVNode("p",{class:"error"},[this.err]),e.createVNode(a,{content:"S'inscrire"},null)]),e.createVNode(e.resolveComponent("router-link"),{to:"/login"},{default:()=>[e.createTextVNode("Se connecter")]})])},methods:{getErrorFromHttpStatus:e=>Object.freeze({403:"Cet email n'est pas whitelisté",409:"Un compte associé à cet email/identifiant existe déjà"})[e]||"Il y'a eu un problème. Veuillez réessayer plus tard",validateEmail:e=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase()),register(){const{email:e,username:t,password:r}=this;return e&&t&&r?this.validateEmail(e)?void s.post("/api/v1/register",{email:e,username:t,password:r}).then((()=>this.$router.push("app"))).catch((e=>this.err=this.getErrorFromHttpStatus(e.response.status))):this.err="Adresse email invalide":this.err="Veuillez remplir tous les champs"}}},n={props:["message"],render({message:t}){return e.createVNode("div",{class:"message"},[e.createVNode("h2",{style:{color:t.author.color}},[t.author.username,e.createVNode("span",{class:"timestamp"},[e.createTextVNode("(à "),this.formatDate(t.timestamp),e.createTextVNode(")")])]),e.createVNode("p",null,[t.content])])},methods:{formatDate:e=>new Intl.DateTimeFormat("fr-fr",{hour:"2-digit",minute:"2-digit"}).format(e)}},l={data:()=>({messages:[],message:""}),render(){return e.createVNode("div",{class:"container chat"},[e.createVNode("div",{class:"messageContainer"},[this.messages.map(((t,s)=>e.createVNode(n,{message:t,key:s},null))),e.createVNode("div",{id:"bot",ref:"bottom"},null)]),e.createVNode("form",{onSubmit:e=>{e.preventDefault(),this.sendMessage()}},[e.withDirectives(e.createVNode("input",{"onUpdate:modelValue":e=>this.message=e,type:"text",placeholder:"Message...",maxlength:"512"},null),[[e.vModelText,this.message]])])])},created(){this.ws=new WebSocket(`ws://${window.location.host}`),this.ws.onmessage=e=>this.messages.push(JSON.parse(e.data).d)},updated(){this.$refs.bottom.scrollIntoView({behavior:"smooth"})},methods:{sendMessage(){this.message&&(this.ws.send(JSON.stringify({op:1,content:this.message})),this.message="")}}};const d=t.createRouter({history:t.createWebHistory(),routes:[{path:"/",redirect:"/login"},{path:"/login",component:o},{path:"/register",component:i},{path:"/app",component:l},{path:"/:pathMatch(.*)*",redirect:"/login"}]});d.beforeEach(((e,t,r)=>{"/app"===e.path?s.get("/api/v1/user").then((()=>r())).catch((()=>r({path:"/login"}))):r()}));const p=e.createApp(r).use(d);d.isReady().then((()=>{p.mount("body")}))}(Vue,VueRouter,axios);
